import os
import requests, json
from feedgen.feed import FeedGenerator
import xml.dom.minidom
import datetime

fg = FeedGenerator()

url = "https://www.opencve.io/api/reports"

Auth = os.environ['AUTH'] # Replace with Basic Authentication Header

payload={}
headers = {
  'Accept': 'application/json',
  'Authorization': f'Basic {Auth}',
}

response = requests.request("GET", url, headers=headers, data=payload)
alert_list = response.json()
#print(json.dumps(response.json(), indent=4))

for alert in alert_list[::-1]:
    report_id = alert['id']
    print(f"Fetching report {report_id}")
    report_url = f"https://www.opencve.io/reports/{report_id}"
    url = f"https://www.opencve.io/api/reports/{report_id}/alerts"
    response = requests.request("GET", url, headers=headers, data=payload)
    id = response.json()[0]['id']
    cve = response.json()[0]['cve']
    date = response.json()[0]['created_at']
    vendors = response.json()[0]['details']['vendors']

    # Get CVE info
    print(f"Fetching info about {cve}")
    url = f"https://www.opencve.io/api/cve/{cve}"
    response_cve = requests.request("GET", url, headers=headers, data=payload)
    #print(json.dumps(response_cve.json(), indent=4))
    summary = response_cve.json()['summary']
    score = response_cve.json()['cvss']['v3']
    # Add to RSS
    fe = fg.add_entry()
    fe.id(id)
    fe.title(f"{cve} ({score}) - {summary}")
    fe.description(f"{cve} - {','.join(vendors)}")
    fe.link(href=report_url)
    fe.category({'term': ','.join(vendors)})
    fe.pubDate(datetime.datetime.strptime(date, '%Y-%m-%dT%H:%M:%SZ').replace(tzinfo=datetime.timezone.utc))



# Write RSS
fg.id(f"12")
fg.title("OpenCVE RSS feed")
fg.author({"name": "Kaan Arslan"})
fg.link(href=f"https://opencve.io", rel="alternate")
fg.docs("")
fg.description(f"RSS feed of opencve.io")
fg.language("en")
fg.rss_file('rss.xml')
dom = xml.dom.minidom.parse('rss.xml')
pretty_xml_as_string = dom.toprettyxml()
f = open("rss.xml", "w")
f.write(pretty_xml_as_string)
f.close()